{"version":3,"sources":["components/Dashboard/FlightController.js","components/Dashboard/FlightCost.js","components/Dashboard/FlightMap.js","components/Dashboard/FlightStats.js","components/Dashboard/FlightDashboard.js","components/Header/Header.js","serviceWorker.js","index.js"],"names":["FlightController","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","originStateLabel","destStateLabel","originState","destState","originAirport","destAirport","year","quarter","_this2","react_default","a","createElement","reactstrap_es","outline","color","tag","className","xs","react_select_esm","value","placeholder","onChange","evt","setState","label","statesToAirportsData","callback","origin","options","statesData","map","val","dest","yearsData","React","Component","FlightCost","currAirport","shortestPath","pathCost","totalCost","undefined","unshift","shortestDist","toFixed","flightList","i","length","push","key","style","marginTop","FlightMap","createAirportMarkers","airports","maxDepartures","Math","max","apply","toConsumableArray","flightData","fd","flightPath","originCoordinate","destCoordinate","radius","Circle","center","fillColor","fillOpacity","createFlightPaths","paths","maxPassengers","weight","Polyline","positions","createShortestFlightPaths","prevAirport","prevAirportCoordinate","currAirportCoordinate","airportsData","colors","shortestPaths","Map","zoom","TileLayer","url","attribution","id","accessToken","preferCanvas","LayerGroup","FlightStats","console","log","shift","departures","passengers","year_quarter_indices","year_quarter_labels","timeSeriesData","index","flightPathStats","summaryPath","j","type","mode","name","x","y","line","marker","hoverinfo","react_plotly_default","data","layout","autosize","title","xaxis","yaxis","useResizeHandler","width","height","labels","values","FlightDashboard","callbackSetState","dijkstra","V","E","W","source","dist","previous","Q","FibonacciHeap","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","v","Infinity","insert","err","return","isEmpty","u","extractMinimum","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","alt","path","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Set","concat","_i","dijkstraResult","flightPathData","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Dashboard_FlightController","keys","sort","Dashboard_FlightCost","Dashboard_FlightMap","Dashboard_FlightStats","Header","toggle","bind","assertThisInitialized","isOpen","light","expand","justifyContent","fontFamily","fontWeight","href","Boolean","window","location","hostname","match","ReactDOM","render","components_Header_Header","document","getElementById","Dashboard_FlightDashboard","USAFlights","Airports","FlightPathStats","States","StatesToAirports","Years","reverse","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4939617.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Card, CardBody, CardHeader, Container, Row, Col } from 'reactstrap';\r\n\r\nimport './flight-controller.css';\r\n\r\nclass FlightController extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originStateLabel: this.props.originStateLabel,\r\n      destStateLabel: this.props.destStateLabel,\r\n      originState: this.props.originState,\r\n      destState: this.props.destState,\r\n      originAirport: this.props.originAirport,\r\n      destAirport: this.props.destAirport,\r\n      year: this.props.year,\r\n      quarter: this.props.quarter,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card outline color=\"primary\">\r\n          <CardHeader tag=\"h4\">Plan your flight:</CardHeader>\r\n          <CardBody>\r\n            <Container>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">  \r\n                  <h6>Origin:</h6>\r\n                  <Select\r\n                    value={this.state.originStateLabel}\r\n                    placeholder={this.state.originStateLabel}\r\n                    onChange={(evt) => { \r\n                      this.setState({ \r\n                        originStateLabel: evt.label,\r\n                        originState: evt.value,\r\n                        originAirport: this.props.statesToAirportsData[evt.value][0],\r\n                      });\r\n                      this.props.callback({ origin: this.props.statesToAirportsData[evt.value][0] });\r\n                    }}\r\n                    options={this.props.statesData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Airport:</h6>\r\n                  <Select\r\n                    value={this.state.originAirport}\r\n                    placeholder={this.state.originAirport}\r\n                    onChange={(evt) => {\r\n                      this.setState({ originAirport: evt.label });\r\n                      this.props.callback({ origin: evt.value });\r\n                    }}\r\n                    options={this.props.statesToAirportsData[this.state.originState].map((val) => {\r\n                      return {'label': val, 'value': val};\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">\r\n                  <h6>Destination:</h6>\r\n                  <Select\r\n                    value={this.state.destStateLabel}\r\n                    placeholder={this.state.destStateLabel}\r\n                    onChange={(evt) => { \r\n                      this.setState({ \r\n                        destStateLabel: evt.label,\r\n                        destState: evt.value,\r\n                        destAirport: this.props.statesToAirportsData[evt.value][0],\r\n                      });\r\n                      this.props.callback({ dest: this.props.statesToAirportsData[evt.value][0] });\r\n                    }}\r\n                    options={this.props.statesData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Airport:</h6>\r\n                  <Select\r\n                    value={this.state.destAirport}\r\n                    placeholder={this.state.destAirport}\r\n                    onChange={(evt) => {\r\n                      this.setState({ destAirport: evt.label });\r\n                      this.props.callback({ dest: evt.value });\r\n                    }}\r\n                    options={this.props.statesToAirportsData[this.state.destState].map((val) => {\r\n                      return {'label': val, 'value': val};\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">\r\n                  <h6>Year:</h6>\r\n                  <Select\r\n                    value={this.state.year}\r\n                    placeholder={this.state.year}\r\n                    onChange={(evt) => {\r\n                      this.setState({ year: evt.label });\r\n                      this.props.callback({ year: evt.value });\r\n                    }}\r\n                    options={this.props.yearsData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Quarter:</h6>\r\n                  <Select\r\n                    value={this.state.quarter}\r\n                    placeholder={this.state.quarter}\r\n                    onChange={(evt) => {\r\n                      this.setState({ quarter: evt.label });\r\n                      this.props.callback({ quarter: evt.value });\r\n                    }}\r\n                    options={[1, 2, 3, 4].map((quarter) => {\r\n                      return { \"label\": quarter, \"value\": quarter }\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            {/* <h6>Origin:</h6>\r\n            <Select\r\n              value={this.state.origin}\r\n              placeholder={this.state.origin}\r\n              onChange={(evt) => {\r\n                this.setState({ origin: evt.label });\r\n                this.props.callback({ origin: evt.value });\r\n              }}\r\n              options={this.props.statesData} />\r\n            <br />\r\n            <h6>Destination:</h6>\r\n            <Select\r\n              value={this.state.dest}\r\n              placeholder={this.state.dest}\r\n              onChange={(evt) => {\r\n                this.setState({ dest: evt.label });\r\n                this.props.callback({ dest: evt.value });\r\n              }}\r\n              options={this.props.statesData} />\r\n            <br /> */}\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightController;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\r\nimport './flight-cost.css';\r\n\r\nclass FlightCost extends React.Component {\r\n\r\n  render() {\r\n    let currAirport = this.props.dest;\r\n\r\n    const shortestPath = [];\r\n    const pathCost = [];\r\n    let totalCost = 0;\r\n\r\n    while (this.props.shortestPath[currAirport] !== undefined) {\r\n      shortestPath.unshift(currAirport);\r\n      pathCost.unshift(this.props.shortestDist[currAirport].toFixed(2));\r\n      totalCost += this.props.shortestDist[currAirport];\r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n    shortestPath.unshift(this.props.origin)\r\n\r\n    totalCost = totalCost.toFixed(2);\r\n\r\n    const flightList = []\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      flightList.push(\r\n        <li key={i}>{shortestPath[i] + \" to \" + shortestPath[i + 1] + \" | \" + pathCost[i]}</li>\r\n      );\r\n    }\r\n    // const cardType = this.props.flightData.length ? \"success\" : \"danger\";\r\n    // const headerColor = this.props.flightData.length ? \"green\" : \"red\";\r\n    // const minCost = this.props.flightData.length ?\r\n    //   \"$\" + Math.min(...this.props.flightData.map((fd) => {\r\n    //     return fd['market_fare'];\r\n    //   })).toFixed(2) : \"No available flight\";\r\n\r\n    return (\r\n      <div>\r\n        <Card outline color=\"success\" style={{ marginTop: \"2em\" }}>\r\n          <CardHeader tag=\"h5\">Minimum Flight Cost:</CardHeader>\r\n          <CardBody>\r\n            <Card>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <h4 className={\"info-text\"}> Total Cost: </h4>\r\n\r\n                </Col>\r\n                <Col xs=\"6\">\r\n                  <h4 className={\"cost-text\"}> ${totalCost} </h4>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </CardBody>\r\n          <CardBody>\r\n            <Card>\r\n              <CardBody>\r\n                <ul>{flightList}</ul>\r\n              </CardBody>\r\n            </Card>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightCost;\r\n","import React from 'react';\r\nimport { Map, TileLayer, Circle, Polyline, LayerGroup } from 'react-leaflet';\r\nimport { Container, Row, Col, Card } from 'reactstrap';\r\n\r\nclass FlightMap extends React.Component {\r\n\r\n  createAirportMarkers = () => {\r\n    const airports = [];\r\n\r\n    const maxDepartures = Math.max(...this.props.flightData.map((fd) => {\r\n      return fd['departures'];\r\n    }));\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']]\r\n\r\n      const radius = 10000 * (flightPath['departures'] / maxDepartures + 1);\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={i * 2}\r\n          center={originCoordinate}\r\n          radius={radius}\r\n          color=\"red\"\r\n          fillColor=\"#f08080\"\r\n          fillOpacity={0.5}>\r\n        </Circle>);\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={i * 2 + 1}\r\n          center={destCoordinate}\r\n          radius={radius}\r\n          color=\"green\"\r\n          fillColor=\"#98fb98\"\r\n          fillOpacity={0.5}>\r\n        </Circle>\r\n      )\r\n    }\r\n\r\n    return airports;\r\n  }\r\n\r\n  createFlightPaths = () => {\r\n    const paths = [];\r\n\r\n    const maxPassengers = Math.max(...this.props.flightData.map((fd) => {\r\n      return fd['pass_sum'];\r\n    }));\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']];\r\n      const weight = 2 * (flightPath['pass_sum'] / maxPassengers + 0.25);\r\n\r\n      paths.push(\r\n        <Polyline\r\n          key={i}\r\n          positions={[originCoordinate, destCoordinate]}\r\n          color=\"white\"\r\n          weight={weight}>\r\n        </Polyline>);\r\n    }\r\n\r\n    return paths;\r\n  }\r\n\r\n\r\n  createShortestFlightPaths = () => {\r\n\r\n    const airports = [];\r\n    const paths = [];\r\n\r\n    // const maxPassengers = Math.max(...this.props.flightData.map((fd) => {\r\n    //   return fd['pass_sum'];\r\n    // }));\r\n\r\n    let prevAirport;\r\n    let prevAirportCoordinate;\r\n\r\n    let currAirport = this.props.dest;\r\n    let currAirportCoordinate = [\r\n      this.props.airportsData[this.props.dest]['lat'],\r\n      this.props.airportsData[this.props.dest]['long'],\r\n    ];\r\n\r\n    airports.push(\r\n      <Circle\r\n        key={currAirport}\r\n        center={currAirportCoordinate}\r\n        radius={10000}\r\n        color=\"red\"\r\n        fillColor=\"#f08080\"\r\n        fillOpacity={0.5}>\r\n      </Circle>);\r\n\r\n    const colors = [];\r\n\r\n    for (let i = 0; this.props.shortestPath[currAirport] !== undefined; i++) {\r\n      colors.push(this.props.colors[i]);\r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n\r\n    currAirport = this.props.dest;\r\n\r\n    for (let i = 0; this.props.shortestPath[currAirport] !== undefined; i++) {\r\n\r\n      prevAirport = currAirport;\r\n      prevAirportCoordinate = currAirportCoordinate;\r\n\r\n      currAirport = this.props.shortestPath[currAirport];\r\n      currAirportCoordinate = [\r\n        this.props.airportsData[currAirport]['lat'],\r\n        this.props.airportsData[currAirport]['long'],\r\n      ];\r\n      // const weight = 2 * (flightPath['pass_sum'] / maxPassengers + 0.25);\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={currAirport}\r\n          center={currAirportCoordinate}\r\n          radius={10000}\r\n          color=\"green\"\r\n          fillColor=\"#f08080\"\r\n          fillOpacity={0.5}>\r\n        </Circle>);\r\n\r\n      paths.push(\r\n        <Polyline\r\n          key={[prevAirport, currAirport]}\r\n          positions={[prevAirportCoordinate, currAirportCoordinate]}\r\n          color={colors[colors.length - i - 1]}\r\n          weight={1}>\r\n        </Polyline>);\r\n    }\r\n\r\n    return { 'airports': airports, 'paths': paths };\r\n  }\r\n\r\n  render() {\r\n    const position = [32.8, -96];\r\n    const zoom = 3;\r\n\r\n    const shortestPaths = this.createShortestFlightPaths();\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Map center={position} zoom={zoom}>\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              // url=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\"\r\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n              id=\"mapbox.light\"\r\n              accessToken=\"pk.eyJ1Ijoic2Vhbnl0YWsiLCJhIjoiY2ptOTFzYnJlMDd4dzNram9wejV6NWUzNCJ9.Pj7WJobAaBWN7naYDiw5XA\"\r\n              preferCanvas={true}\r\n            />\r\n            <LayerGroup>\r\n              {shortestPaths['airports']}\r\n            </LayerGroup>\r\n            <LayerGroup>\r\n              {shortestPaths['paths']}\r\n            </LayerGroup>\r\n          </Map>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightMap;\r\n\r\n\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { Container, Row, Col, Card } from 'reactstrap';\r\n\r\nclass FlightStats extends React.Component {\r\n\r\n  render() {\r\n    let currAirport = this.props.dest;\r\n\r\n    const shortestPath = [];\r\n    const pathCost = [];\r\n\r\n    console.log(this.props.shortestDist);\r\n\r\n    while (currAirport !== undefined) {\r\n      shortestPath.unshift(currAirport);\r\n      console.log(currAirport);\r\n      if (this.props.shortestDist[currAirport] !== undefined) {\r\n        pathCost.unshift(this.props.shortestDist[currAirport].toFixed(2));\r\n      }\r\n      \r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n    pathCost.shift()\r\n\r\n    const flightPath = [];\r\n    const departures = [];\r\n    const passengers = [];\r\n\r\n    const year_quarter_indices = [];\r\n    const year_quarter_labels = [];\r\n    for (let year = 2012; year <= 2017; year++) {\r\n      for (let quarter = 1; quarter <= 4; quarter++) {\r\n        year_quarter_indices.push(year + \":\" + quarter);\r\n        year_quarter_labels.push(year + \" Q\" + quarter);\r\n      }\r\n    }\r\n\r\n    const timeSeriesData = [];\r\n\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      flightPath.push(shortestPath[i] + ' to ' + shortestPath[i + 1]);\r\n      let index = shortestPath[i] + ':' + shortestPath[i + 1] + ':' + this.props.year + ':' + this.props.quarter;\r\n      departures.push(this.props.flightPathStats[index]['departures']);\r\n      passengers.push(this.props.flightPathStats[index]['pass_sum']);\r\n\r\n      const summaryPath = [];\r\n      for (let j = 0; j < year_quarter_indices.length; j++) {\r\n        index = shortestPath[i] + ':' + shortestPath[i + 1] + ':' + year_quarter_indices[j];\r\n        if (this.props.flightPathStats[index] !== undefined) {\r\n          summaryPath.push(this.props.flightPathStats[index]['market_fare']);\r\n        }\r\n        else {\r\n          summaryPath.push(0);\r\n        }\r\n      }\r\n\r\n      timeSeriesData.push({\r\n        type: 'scatter',\r\n        mode: 'lines',\r\n        name: shortestPath[i] + ' to ' + shortestPath[i + 1],\r\n        x: year_quarter_labels,\r\n        y: summaryPath,\r\n        line: {\r\n            color: this.props.colors[i],\r\n        },\r\n        marker: {\r\n          hoverinfo: \"\\$ y\",\r\n        }\r\n      })\r\n    }\r\n\r\n    console.log(flightPath);\r\n    console.log(pathCost);\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            {/* Bar graph: Passengers(y) vs Airports(x) (Origin) */}\r\n            <Col xs=\"4\">\r\n              <Card>\r\n                <Plot\r\n                  data={[{\r\n                    x: flightPath,\r\n                    y: passengers,\r\n                    type: 'bar',\r\n                  }]}\r\n                  layout={{\r\n                    autosize: true,\r\n                    title: 'Number of Passengers per Flight Leg',\r\n                    xaxis: {\r\n                      title: 'Flight Leg'\r\n                    },\r\n                    yaxis: {\r\n                      title: 'Passengers'\r\n                    }\r\n                  }}\r\n                  useResizeHandler={true}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            {/* Bar graph: Passengers(y) vs Airports(x) (Destination) */}\r\n            <Col xs=\"4\">\r\n              <Card>\r\n                <Plot\r\n                  data={[{\r\n                    x: flightPath,\r\n                    y: departures,\r\n                    type: 'bar'\r\n                  }]}\r\n                  layout={{\r\n                    autosize: true,\r\n                    title: 'Number of Flights per Flight Leg',\r\n                    xaxis: {\r\n                      title: 'Flight Leg'\r\n                    },\r\n                    yaxis: {\r\n                      title: 'Flights'\r\n                    },\r\n                    \r\n                  }}\r\n                  useResizeHandler={true}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col xs=\"4\">\r\n              <Card>\r\n                <Plot\r\n                  data={[{\r\n                    labels: flightPath,\r\n                    values: pathCost,\r\n                    type: 'pie',\r\n                    marker: {\r\n                      colors: this.props.colors,\r\n                    },\r\n                  }]}\r\n                  layout={{\r\n                    // autosize: true,\r\n                    title: 'Market Fare of Flight by Flight Leg',\r\n                    // xaxis: {\r\n                    //   title: 'Flight Leg'\r\n                    // },\r\n                    // yaxis: {\r\n                    //   title: 'Flights'\r\n                    // }\r\n                  }}\r\n                  useResizeHandler={true}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col>\r\n          <Card>\r\n          <Plot\r\n            data={timeSeriesData}\r\n            layout={{\r\n                    // autosize: true,\r\n                    title: 'Market Fare of Flight Leg by Year and Quarter',\r\n                    xaxis: {\r\n                      title: 'Year and Quarter'\r\n                    },\r\n                    yaxis: {\r\n                      title: 'Market Fare in U.S. Dollars'\r\n                    }\r\n                  }}\r\n                  useResizeHandler={true}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n          </Card>\r\n          \r\n          </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightStats;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport FlightController from './FlightController';\r\nimport FlightCost from './FlightCost';\r\nimport FlightMap from './FlightMap';\r\nimport FlightStats from './FlightStats';\r\n\r\nimport { FibonacciHeap } from '@tyriar/fibonacci-heap';\r\n\r\n\r\nclass FlightDashboard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      origin: 'HNL',\r\n      dest: 'BGR',\r\n      year: this.props.flightData[0]['year'],\r\n      quarter: this.props.flightData[0]['quarter'],\r\n    }\r\n  }\r\n\r\n  callbackSetState = (state) => {\r\n    this.setState(state);\r\n  }\r\n\r\n  dijkstra = (V, E, W, source) => {\r\n    const dist = {};\r\n    const previous = {};\r\n    const Q = new FibonacciHeap();\r\n\r\n    for (let v of V) {\r\n      dist[v] = Infinity;\r\n      previous[v] = undefined;\r\n      Q.insert(v, dist[v]);\r\n    }\r\n    dist[source] = 0;\r\n\r\n    while (!Q.isEmpty()) {\r\n      const u = Q.extractMinimum().key;\r\n      if (E[u] === undefined) {\r\n        continue;\r\n      }\r\n      for (let v of E[u]) {\r\n        const alt = dist[u] + W[[u, v]];\r\n        if (alt < dist[v]) {\r\n          dist[v] = alt;\r\n          Q.insert(v, dist[v]);\r\n          previous[v] = u;\r\n        }\r\n      }\r\n    }\r\n    console.log(dist);\r\n    return { 'path': previous, 'dist': dist };\r\n  }\r\n\r\n  render() {\r\n    const flightData = [];\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['year'] === this.state.year &&\r\n        fd['quarter'] === this.state.quarter) {\r\n        flightData.push(fd);\r\n      }\r\n    }\r\n\r\n    const origin = new Set(flightData.map((fd) => fd['origin_abr']));\r\n    const dest = new Set(flightData.map((fd) => fd['dest_abr']));\r\n    const V = new Set([...origin, ...dest]);\r\n    const E = {};\r\n    const W = {};\r\n\r\n    for (let fd of flightData) {\r\n      if (E[fd['origin_abr']] === undefined) {\r\n        E[fd['origin_abr']] = [fd['dest_abr']];\r\n      }\r\n      else {\r\n        E[fd['origin_abr']].push(fd['dest_abr']);\r\n      }\r\n      W[[fd['origin_abr'], fd['dest_abr']]] = fd['market_fare'];\r\n    }\r\n    const dijkstraResult = this.dijkstra(V, E, W, this.state.origin);\r\n\r\n    const flightPathData = [];\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['origin_abr'] === this.state.origin &&\r\n        fd['dest_abr'] === this.state.dest) {\r\n        flightPathData.push(fd);\r\n      }\r\n    }\r\n\r\n    // console.log(this.props.flightPathStats);\r\n\r\n    const colors = ['#4285F4', '#DB4437', '#F4B400', '#0F9D58']\r\n\r\n    return (\r\n      <div>\r\n        <Container style={{ marginTop: \"1em\" }}>\r\n          <Row style={{ marginTop: \"1em\" }}>\r\n            <Col xs=\"4\">\r\n              <FlightController\r\n                originStateLabel={'Hawaii'}\r\n                destStateLabel={'Maine'}\r\n                originState={'HI'}\r\n                destState={'ME'}\r\n                originAirport={'HNL'}\r\n                destAirport={'BGR'}\r\n                year={this.state.year}\r\n                quarter={this.state.quarter}\r\n                callback={this.callbackSetState}\r\n                airportsData={Object.keys(this.props.airportsData).sort().map((val) => {\r\n                  return { label: val, value: val }\r\n                })}\r\n                statesData={this.props.statesData}\r\n                statesToAirportsData={this.props.statesToAirportsData}\r\n                yearsData={this.props.yearsData}>\r\n              </FlightController>\r\n              <FlightCost\r\n                origin={this.state.origin}\r\n                dest={this.state.dest}\r\n                shortestPath={dijkstraResult['path']}\r\n                shortestDist={dijkstraResult['dist']}>\r\n              </FlightCost>\r\n            </Col>\r\n            <Col xs=\"8\">\r\n              <FlightMap\r\n                origin={this.state.origin}\r\n                dest={this.state.dest}\r\n                flightData={flightData}\r\n                airportsData={this.props.airportsData}\r\n                shortestPath={dijkstraResult['path']}\r\n                colors={colors}>\r\n              </FlightMap>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: \"1em\" }}>\r\n            <Col>\r\n              <FlightStats\r\n                origin={this.state.origin}\r\n                dest={this.state.dest}\r\n                year={this.state.year}\r\n                quarter={this.state.quarter}\r\n                flightData={flightPathData}\r\n                flightPathStats={this.props.flightPathStats}\r\n                yearsData={this.props.yearsData}\r\n                shortestPath={dijkstraResult['path']}\r\n                shortestDist={dijkstraResult['dist']}\r\n                colors={colors}>\r\n              </FlightStats>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightDashboard;\r\n\r\n\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\" style={{justifyContent: 'center', fontFamily: 'georgia', fontWeight: 'bold'}}>\r\n          <NavbarBrand href=\"/\">Airlines Visualization</NavbarBrand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'leaflet/dist/leaflet.css'\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FlightDashboard from './components/Dashboard/FlightDashboard';\nimport Header from './components/Header/Header';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport USAFlights from './assets/USAFlights';\n\nimport Airports from './assets/Airports';\nimport FlightPathStats from './assets/FlightPathStats';\nimport States from './assets/States';\nimport StatesToAirports from './assets/StatesToAirports';\nimport Years from './assets/Years';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Controller />, document.getElementById('flight-select'));\nReactDOM.render(\n    <Header />,\n    document.getElementById('header')\n);\nReactDOM.render(\n    <FlightDashboard\n        flightData={USAFlights}\n        airportsData={Airports}\n        flightPathStats={FlightPathStats}\n        statesData={States}\n        statesToAirportsData={StatesToAirports}\n        yearsData={Years.sort().reverse()} />,\n    document.getElementById('flight-dashboard')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}