{"version":3,"sources":["components/Dashboard/FlightController.js","components/Dashboard/FlightMap.js","components/Dashboard/FlightStats.js","components/Dashboard/FlightDashboard.js","serviceWorker.js","index.js"],"names":["FlightController","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setOrigin","origin","setState","label","originCallback","value","setDest","dest","destCallback","state","_this2","react_default","a","createElement","reactstrap_es","react_select_esm","placeholder","onChange","evt","options","statesData","React","Component","FlightMap","createAirportMarkers","airports","i","flightData","length","flightPath","originCoordinate","destCoordinate","push","Circle","key","center","radius","color","fillColor","fillOpacity","createFlightPaths","paths","Polyline","positions","weight","Map","zoom","TileLayer","url","attribution","id","accessToken","preferCanvas","LayerGroup","FlightStats","xs","react_plotly_default","data","x","map","fd","y","type","layout","autosize","useResizeHandler","style","width","height","FlightDashboard","sort","val","selectOrigin","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","selectDest","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Dashboard_FlightController","Dashboard_FlightMap","Dashboard_FlightStats","Boolean","window","location","hostname","match","ReactDOM","render","Dashboard_FlightDashboard","TestUSAFlights","States","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96127416.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\n\r\nclass FlightController extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      origin: this.props.origin,\r\n      dest: this.props.dest,\r\n    };\r\n  }\r\n\r\n  setOrigin = (origin) => {\r\n    this.setState({\r\n      origin: origin.label,\r\n    });\r\n    this.props.originCallback(origin.value);\r\n  }\r\n\r\n  setDest = (dest) => {\r\n    this.setState({\r\n      dest: dest.label,\r\n    });\r\n    this.props.destCallback(dest.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>Plan your flight:</CardTitle>\r\n            <h6>Origin:</h6>\r\n            <Select\r\n              value={this.state.origin}\r\n              placeholder={this.state.origin}\r\n              onChange={(evt) => this.setOrigin(evt)}\r\n              options={this.props.statesData} />\r\n            <br />\r\n            <h6>Destination:</h6>\r\n            <Select\r\n              value={this.state.dest}\r\n              placeholder={this.state.dest}\r\n              onChange={(evt) => this.setDest(evt)}\r\n              options={this.props.statesData} />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightController;\r\n","import React from 'react';\r\nimport { Map, Marker, Popup, TileLayer, Circle, Polyline, CircleMarker, LayerGroup } from 'react-leaflet'\r\nimport FlightSelect from './FlightController';\r\n\r\nclass FlightMap extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  createAirportMarkers = () => {\r\n    const airports = [];\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']]\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={i * 2}\r\n          center={originCoordinate}\r\n          radius={1000}\r\n          color=\"red\"\r\n          fillColor=\"#f08080\"\r\n          fillOpacity={0.5}>\r\n        </Circle>);\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={i * 2 + 1}\r\n          center={destCoordinate}\r\n          radius={1000}\r\n          color=\"green\"\r\n          fillColor=\"#98fb98\"\r\n          fillOpacity={0.5}>\r\n        </Circle>\r\n      )\r\n    }\r\n\r\n    return airports;\r\n  }\r\n\r\n  createFlightPaths = () => {\r\n    const paths = [];\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']]\r\n\r\n      paths.push(\r\n        <Polyline\r\n          key={i}\r\n          positions={[originCoordinate, destCoordinate]}\r\n          color=\"white\"\r\n          weight={0.25}>\r\n        </Polyline>);\r\n    }\r\n\r\n    return paths;\r\n  }\r\n\r\n  render() {\r\n    const position = [37.8, -96];\r\n    const zoom = 4;\r\n\r\n    return (\r\n      <div>\r\n        <Map center={position} zoom={zoom}>\r\n          <TileLayer\r\n            url=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            id=\"mapbox.dark\"\r\n            accessToken=\"pk.eyJ1Ijoic2Vhbnl0YWsiLCJhIjoiY2ptOTFzYnJlMDd4dzNram9wejV6NWUzNCJ9.Pj7WJobAaBWN7naYDiw5XA\"\r\n            preferCanvas={true}\r\n          />\r\n          <LayerGroup>\r\n            {this.createAirportMarkers()}\r\n          </LayerGroup>\r\n          <LayerGroup>\r\n            {this.createFlightPaths()}\r\n          </LayerGroup>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightMap;\r\n\r\n\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\n\r\nclass FlightStats extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <Card>\r\n              <Plot\r\n                data={[{\r\n                  x: this.props.flightData.map((fd) => fd['origin_abr']),\r\n                  y: this.props.flightData.map((fd) => fd['pass_sum']),\r\n                  type: 'bar',\r\n                }]}\r\n                layout={{\r\n                  autosize: true\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{width: \"100%\", height: \"100%\"}}\r\n              />\r\n              </Card>\r\n             \r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n            <Card>\r\n            <Plot\r\n                data={[{\r\n                  x: this.props.flightData.map((fd) => fd['dest_abr']),\r\n                  y: this.props.flightData.map((fd) => fd['pass_sum']),\r\n                  type: 'bar',\r\n                }]}\r\n                layout={{\r\n                  autosize: true\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{width: \"100%\", height: \"100%\"}}\r\n              />\r\n            </Card>\r\n              \r\n            </Col>\r\n          </Row>\r\n        </Container>   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightStats;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport FlightController from './FlightController';\r\nimport FlightMap from './FlightMap';\r\nimport FlightStats from './FlightStats';\r\n\r\n\r\nlet options = ['HI', 'CA', 'MA', 'CO'].sort();\r\nconst states = options.map((val) => {\r\n  return { label: val, value: val }\r\n});\r\n\r\nclass FlightDashboard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const flightData = []\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['year'] === 2017 && fd['quarter'] === 1) {\r\n        flightData.push(fd);\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      origin: 'HI',\r\n      dest: 'CA',\r\n      flightData: flightData,\r\n    }\r\n  }\r\n\r\n  selectOrigin = (origin) => {\r\n\r\n    const flightData = []\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['origin_state'] === origin && fd['dest_state'] === this.state.dest) {\r\n        flightData.push(fd);\r\n      }\r\n    }\r\n    this.setState({\r\n      origin: origin,\r\n      flightData: flightData,\r\n    });\r\n  }\r\n\r\n  selectDest = (dest) => {\r\n    const flightData = []\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['origin_state'] === this.state.origin && fd['dest_state'] === dest) {\r\n        flightData.push(fd);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      dest: dest,\r\n      flightData: flightData,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"3\">\r\n              <FlightController\r\n                origin={'Hawaii'}\r\n                dest={'California'}\r\n                originCallback={this.selectOrigin}\r\n                destCallback={this.selectDest}\r\n                statesData={this.props.statesData}>\r\n              </FlightController>\r\n            </Col>\r\n            <Col xs=\"9\">\r\n              <FlightMap\r\n                origin={this.state.origin}\r\n                dest={this.state.dest}\r\n                flightData={this.state.flightData}>\r\n              </FlightMap>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FlightStats\r\n                flightData={this.state.flightData}>\r\n              </FlightStats>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightDashboard;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'leaflet/dist/leaflet.css'\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './components/App';\n// import Controller from './components/Dashboard/FlightController';\nimport FlightDashboard from './components/Dashboard/FlightDashboard';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Plotly from 'plotly';\nimport HNLFlights from './assets/HNLFlights';\nimport AllFlights from './assets/AllFlights';\nimport AllStates from './assets/AllStates';\nimport USAFlights from './assets/USAFlights';\nimport TestUSAFlights from './assets/TestUSAFlights';\n\nimport States from './assets/States';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Controller />, document.getElementById('flight-select'));\nReactDOM.render(\n    <FlightDashboard flightData={TestUSAFlights} statesData={States} />, \n    document.getElementById('flight-dashboard')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}