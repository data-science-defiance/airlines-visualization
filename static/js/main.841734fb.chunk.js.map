{"version":3,"sources":["assets/arriving.svg","components/Dashboard/FlightController.js","components/Dashboard/FlightCost.js","components/Dashboard/FlightMap.js","components/Dashboard/FlightStats.js","components/Dashboard/FlightDashboard.js","components/Header/Header.js","components/Footer/Footer.js","serviceWorker.js","index.js","assets/takeoff.svg"],"names":["module","exports","__webpack_require__","p","FlightController","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","originStateLabel","destStateLabel","originState","destState","originAirport","destAirport","year","quarter","_this2","react_default","a","createElement","reactstrap_es","outline","color","tag","className","xs","react_select_esm","value","placeholder","onChange","evt","setState","label","statesToAirportsData","callback","origin","options","statesData","map","val","dest","yearsData","React","Component","FlightCost","currAirport","shortestPath","undefined","unshift","pathCost","totalCost","i","length","index","push","flightPathStats","toFixed","flightList","style","backgroundColor","colors","marginTop","hover","FlightMap","createAirportMarkers","airports","maxDepartures","Math","max","apply","toConsumableArray","flightData","fd","iconTakeoff","L","Icon","iconUrl","require","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","flightPath","destCoordinate","radius","Marker","key","position","icon","Circle","center","fillColor","fillOpacity","createFlightPaths","paths","maxPassengers","originCoordinate","weight","Polyline","positions","createShortestFlightPaths","prevAirport","prevAirportCoordinate","iconLanding","console","log","currAirportCoordinate","airportsData","Popup","string","pass_sum","toLocaleString","pop","shortestPaths","Map","zoom","TileLayer","url","attribution","id","accessToken","preferCanvas","LayerGroup","FlightStats","shortestDist","departures","passengers","year_quarter_indices","year_quarter_labels","timeSeriesData","summaryPath","j","type","mode","name","x","y","line","marker","hoverinfo","avgPassengers","floor","react_plotly_default","data","size","layout","autosize","title","xaxis","yaxis","useResizeHandler","width","height","labels","values","textinfo","FlightDashboard","callbackSetState","dijkstra","V","E","W","source","dist","previous","Q","FibonacciHeap","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","v","Infinity","insert","err","return","isEmpty","u","extractMinimum","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","alt","path","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Set","concat","_i","dijkstraResult","flightPathData","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","src","Dashboard_FlightController","keys","sort","Dashboard_FlightCost","Dashboard_FlightMap","thickness","Dashboard_FlightStats","Header","expand","justifyContent","fontWeight","FooterPage","fluid","Date","getFullYear","href","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","components_Header_Header","document","getElementById","Dashboard_FlightDashboard","USAFlights","Airports","FlightPathStats","States","StatesToAirports","Years","reverse","Footer","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.841734fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arriving.b5f7e43b.svg\";","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Card, CardBody, CardHeader, Container, Row, Col } from 'reactstrap';\r\n\r\nimport './flight-controller.css';\r\n\r\nclass FlightController extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originStateLabel: this.props.originStateLabel,\r\n      destStateLabel: this.props.destStateLabel,\r\n      originState: this.props.originState,\r\n      destState: this.props.destState,\r\n      originAirport: this.props.originAirport,\r\n      destAirport: this.props.destAirport,\r\n      year: this.props.year,\r\n      quarter: this.props.quarter,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card outline color=\"primary\">\r\n          <CardHeader tag=\"h4\" className=\"bg-white\">Plan your flight:</CardHeader>\r\n          <CardBody className=\"bg-light\">\r\n            <Container>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">  \r\n                  <h6>Origin:</h6>\r\n                  <Select\r\n                    value={this.state.originStateLabel}\r\n                    placeholder={this.state.originStateLabel}\r\n                    onChange={(evt) => { \r\n                      this.setState({ \r\n                        originStateLabel: evt.label,\r\n                        originState: evt.value,\r\n                        originAirport: this.props.statesToAirportsData[evt.value][0],\r\n                      });\r\n                      this.props.callback({ origin: this.props.statesToAirportsData[evt.value][0] });\r\n                    }}\r\n                    options={this.props.statesData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Airport:</h6>\r\n                  <Select\r\n                    value={this.state.originAirport}\r\n                    placeholder={this.state.originAirport}\r\n                    onChange={(evt) => {\r\n                      this.setState({ originAirport: evt.label });\r\n                      this.props.callback({ origin: evt.value });\r\n                    }}\r\n                    options={this.props.statesToAirportsData[this.state.originState].map((val) => {\r\n                      return {'label': val, 'value': val};\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">\r\n                  <h6>Destination:</h6>\r\n                  <Select\r\n                    value={this.state.destStateLabel}\r\n                    placeholder={this.state.destStateLabel}\r\n                    onChange={(evt) => { \r\n                      this.setState({ \r\n                        destStateLabel: evt.label,\r\n                        destState: evt.value,\r\n                        destAirport: this.props.statesToAirportsData[evt.value][0],\r\n                      });\r\n                      this.props.callback({ dest: this.props.statesToAirportsData[evt.value][0] });\r\n                    }}\r\n                    options={this.props.statesData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Airport:</h6>\r\n                  <Select\r\n                    value={this.state.destAirport}\r\n                    placeholder={this.state.destAirport}\r\n                    onChange={(evt) => {\r\n                      this.setState({ destAirport: evt.label });\r\n                      this.props.callback({ dest: evt.value });\r\n                    }}\r\n                    options={this.props.statesToAirportsData[this.state.destState].map((val) => {\r\n                      return {'label': val, 'value': val};\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-row\">\r\n                <Col xs=\"7\">\r\n                  <h6>Year:</h6>\r\n                  <Select\r\n                    value={this.state.year}\r\n                    placeholder={this.state.year}\r\n                    onChange={(evt) => {\r\n                      this.setState({ year: evt.label });\r\n                      this.props.callback({ year: evt.value });\r\n                    }}\r\n                    options={this.props.yearsData} />\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <h6>Quarter:</h6>\r\n                  <Select\r\n                    value={this.state.quarter}\r\n                    placeholder={this.state.quarter}\r\n                    onChange={(evt) => {\r\n                      this.setState({ quarter: evt.label });\r\n                      this.props.callback({ quarter: evt.value });\r\n                    }}\r\n                    options={[1, 2, 3, 4].map((quarter) => {\r\n                      return { \"label\": quarter, \"value\": quarter }\r\n                    })} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            {/* <h6>Origin:</h6>\r\n            <Select\r\n              value={this.state.origin}\r\n              placeholder={this.state.origin}\r\n              onChange={(evt) => {\r\n                this.setState({ origin: evt.label });\r\n                this.props.callback({ origin: evt.value });\r\n              }}\r\n              options={this.props.statesData} />\r\n            <br />\r\n            <h6>Destination:</h6>\r\n            <Select\r\n              value={this.state.dest}\r\n              placeholder={this.state.dest}\r\n              onChange={(evt) => {\r\n                this.setState({ dest: evt.label });\r\n                this.props.callback({ dest: evt.value });\r\n              }}\r\n              options={this.props.statesData} />\r\n            <br /> */}\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightController;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardHeader, Row, Col, Table } from 'reactstrap';\r\nimport './flight-cost.css';\r\n\r\nclass FlightCost extends React.Component {\r\n\r\n  render() {\r\n    let currAirport = this.props.dest;\r\n\r\n    const shortestPath = [];\r\n\r\n    while (currAirport !== undefined) {\r\n      shortestPath.unshift(currAirport);\r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n\r\n    const pathCost = [];\r\n    let totalCost = 0;\r\n\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      let index = shortestPath[i] + ':' + shortestPath[i + 1] + ':' + this.props.year + ':' + this.props.quarter;\r\n      pathCost.push(this.props.flightPathStats[index]['market_fare'].toFixed(2));\r\n      totalCost += this.props.flightPathStats[index]['market_fare'];\r\n    }\r\n\r\n    totalCost = totalCost.toFixed(2);\r\n\r\n    const flightList = []\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      flightList.push(\r\n        <tr style={{backgroundColor: this.props.colors[i] + \"7a\"}}>\r\n          <td>{shortestPath[i]}</td>\r\n          <td>{shortestPath[i + 1]}</td>\r\n          <td>${pathCost[i]}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    // const cardType = this.props.flightData.length ? \"success\" : \"danger\";\r\n    // const headerColor = this.props.flightData.length ? \"green\" : \"red\";\r\n    // const minCost = this.props.flightData.length ?\r\n    //   \"$\" + Math.min(...this.props.flightData.map((fd) => {\r\n    //     return fd['market_fare'];\r\n    //   })).toFixed(2) : \"No available flight\";\r\n\r\n    return (\r\n      <div>\r\n        <Card outline color=\"success\" style={{ marginTop: \"2em\" }}>\r\n          <CardHeader tag=\"h5\" className=\"bg-white\">Minimum Flight Cost:</CardHeader>\r\n          <CardBody className=\"bg-light\">\r\n            <Card>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <h4 className={\"info-text\"}> Total Cost: </h4>\r\n\r\n                </Col>\r\n                <Col xs=\"6\">\r\n                  <h4 className={\"cost-text\"}> ${totalCost} </h4>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </CardBody>\r\n          <CardBody>\r\n            <Card>\r\n              <CardBody>\r\n                <Table hover>\r\n                  <thead>\r\n                    <th>Origin</th>\r\n                    <th>Destination</th>\r\n                    <th>Cost</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {flightList}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightCost;\r\n","import React from 'react';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Circle, Polyline, LayerGroup, Marker, Popup } from 'react-leaflet';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\nclass FlightMap extends React.Component {\r\n\r\n  createAirportMarkers = () => {\r\n    const airports = [];\r\n\r\n    const maxDepartures = Math.max(...this.props.flightData.map((fd) => {\r\n      return fd['departures'];\r\n    }));\r\n\r\n    const iconTakeoff = new L.Icon({\r\n      iconUrl: require('../../assets/takeoff.svg'),\r\n      iconRetinaUrl: require('../../assets/takeoff.svg'),\r\n      iconAnchor: null,\r\n      popupAnchor: null,\r\n      shadowUrl: null,\r\n      shadowSize: null,\r\n      shadowAnchor: null,\r\n      iconSize: new L.Point(20, 20),\r\n      className: 'leaflet-div-icon'\r\n\r\n    });\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']]\r\n\r\n      const radius = 10000 * (flightPath['departures'] / maxDepartures + 1);\r\n\r\n      airports.push(\r\n        <Marker\r\n          key={i * 2}\r\n          position={destCoordinate}\r\n          icon={iconTakeoff}\r\n        >\r\n        </Marker>);\r\n\r\n      airports.push(\r\n        <Circle\r\n          key={i * 2 + 1}\r\n          center={destCoordinate}\r\n          radius={radius}\r\n          color=\"green\"\r\n          fillColor=\"#98fb98\"\r\n          fillOpacity={0.5}>\r\n        </Circle>\r\n      )\r\n    }\r\n\r\n    return airports;\r\n  }\r\n\r\n  createFlightPaths = () => {\r\n    const paths = [];\r\n\r\n    const maxPassengers = Math.max(...this.props.flightData.map((fd) => {\r\n      return fd['pass_sum'];\r\n    }));\r\n\r\n    for (let i = 0; i < this.props.flightData.length; i++) {\r\n      const flightPath = this.props.flightData[i];\r\n      const originCoordinate = [flightPath['origin_lat'], flightPath['origin_long']];\r\n      const destCoordinate = [flightPath['dest_lat'], flightPath['dest_long']];\r\n      const weight = 10 * (flightPath['pass_sum'] / maxPassengers + 0.25);\r\n\r\n      paths.push(\r\n        <Polyline\r\n          key={i}\r\n          positions={[originCoordinate, destCoordinate]}\r\n          color=\"white\"\r\n          weight={weight}>\r\n        </Polyline>);\r\n    }\r\n\r\n    return paths;\r\n  }\r\n\r\n\r\n  createShortestFlightPaths = () => {\r\n\r\n    const airports = [];\r\n    const paths = [];\r\n\r\n    const iconTakeoff = new L.Icon({\r\n      iconUrl: require('../../assets/takeoff.svg'),\r\n      iconSize: new L.Point(50, 50),\r\n\r\n    });\r\n\r\n    const iconLanding = new L.Icon({\r\n      iconUrl: require('../../assets/arriving.svg'),\r\n      iconSize: new L.Point(50, 50),\r\n\r\n    });\r\n\r\n    console.log(iconTakeoff);\r\n\r\n    // const maxPassengers = Math.max(...this.props.flightData.map((fd) => {\r\n    //   return fd['pass_sum'];\r\n    // }));\r\n\r\n    let prevAirport;\r\n    let prevAirportCoordinate;\r\n\r\n    let currAirport = this.props.dest;\r\n    let currAirportCoordinate = [\r\n      this.props.airportsData[this.props.dest]['lat'],\r\n      this.props.airportsData[this.props.dest]['long'],\r\n    ];\r\n\r\n    airports.push(\r\n      <Marker\r\n        key={currAirport}\r\n        position={currAirportCoordinate}\r\n        icon={iconLanding}\r\n      >\r\n        <Popup>Airport Code: {currAirport}</Popup>\r\n      </Marker>);\r\n\r\n    const colors = [];\r\n\r\n    for (let i = 0; this.props.shortestPath[currAirport] !== undefined; i++) {\r\n      colors.push(this.props.colors[i]);\r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n\r\n    currAirport = this.props.dest;\r\n\r\n    for (let i = 0; this.props.shortestPath[currAirport] !== undefined; i++) {\r\n\r\n      prevAirport = currAirport;\r\n      prevAirportCoordinate = currAirportCoordinate;\r\n      const flightPath = this.props.flightPathStats;\r\n\r\n      currAirport = this.props.shortestPath[currAirport];\r\n      currAirportCoordinate = [\r\n        this.props.airportsData[currAirport]['lat'],\r\n        this.props.airportsData[currAirport]['long'],\r\n      ];\r\n      let weight;\r\n      let string = prevAirport + ':' + currAirport + ':' + this.props.year + ':' + this.props.quarter;\r\n      console.log(flightPath[string].pass_sum);\r\n      if (flightPath[string].pass_sum < 250) { weight = 70; }\r\n      if (flightPath[string].pass_sum > 250) { weight = 60; }\r\n      if (flightPath[string].pass_sum > 1000) { weight = 50; }\r\n      if (flightPath[string].pass_sum > 4000) { weight = 40; }\r\n      if (flightPath[string].pass_sum > 16000) { weight = 30; }\r\n      if (flightPath[string].pass_sum > 64000) { weight = 20; }\r\n      else { weight = 10; }\r\n      //const weight = 2 * (flightPath['pass_sum'] / maxPassengers + 0.25);\r\n\r\n      if (i !== airports.length - 1) {\r\n        airports.push(\r\n          <Circle\r\n            key={currAirport}\r\n            center={currAirportCoordinate}\r\n            radius={10000}\r\n            color=\"green\"\r\n            fillColor=\"#f08080\"\r\n            fillOpacity={0.5}>\r\n          </Circle>);\r\n      }\r\n\r\n      paths.push(\r\n        <Polyline\r\n          key={[prevAirport, currAirport]}\r\n          positions={[prevAirportCoordinate, currAirportCoordinate]}\r\n          color={colors[colors.length - i - 1]}\r\n          weight={weight}>\r\n          <Popup>Origin of Leg: {currAirport}\r\n            <br />Destination of Leg: {prevAirport}\r\n            <br />Number of Passengers: {flightPath[string].pass_sum.toLocaleString()}\r\n          </Popup>\r\n        </Polyline>);\r\n    }\r\n\r\n    airports.pop();\r\n    airports.push(\r\n      <Marker\r\n        key={currAirport}\r\n        position={currAirportCoordinate}\r\n        icon={iconTakeoff}\r\n      >\r\n        <Popup>Airport Code: {currAirport}</Popup>\r\n      </Marker>);\r\n\r\n    return { 'airports': airports, 'paths': paths };\r\n  }\r\n\r\n  render() {\r\n    const position = [32.8, -96];\r\n    const zoom = 3;\r\n\r\n    const shortestPaths = this.createShortestFlightPaths();\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Map center={position} zoom={zoom}>\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              // url=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\"\r\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n              id=\"mapbox.light\"\r\n              accessToken=\"pk.eyJ1Ijoic2Vhbnl0YWsiLCJhIjoiY2ptOTFzYnJlMDd4dzNram9wejV6NWUzNCJ9.Pj7WJobAaBWN7naYDiw5XA\"\r\n              preferCanvas={true}\r\n            />\r\n            <LayerGroup>\r\n              {shortestPaths['airports']}\r\n            </LayerGroup>\r\n            <LayerGroup>\r\n              {shortestPaths['paths']}\r\n            </LayerGroup>\r\n          </Map>\r\n          <CardBody className=\"bg-light\">Visualize your flight path. The thickness of the flight leg is by the number of passengers coming through. Click individual airports and flight legs to check the statistics. </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightMap;\r\n\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport './flight-stats.css';\r\n\r\nclass FlightStats extends React.Component {\r\n\r\n  render() {\r\n    let currAirport = this.props.dest;\r\n\r\n    const shortestPath = [];\r\n\r\n    console.log(this.props.shortestDist);\r\n\r\n    while (currAirport !== undefined) {\r\n      shortestPath.unshift(currAirport);\r\n      currAirport = this.props.shortestPath[currAirport];\r\n    }\r\n\r\n    const flightPath = [];\r\n    const departures = [];\r\n    const passengers = [];\r\n    const pathCost = [];\r\n\r\n    const year_quarter_indices = [];\r\n    const year_quarter_labels = [];\r\n    for (let year = 2012; year <= 2017; year++) {\r\n      for (let quarter = 1; quarter <= 4; quarter++) {\r\n        year_quarter_indices.push(year + \":\" + quarter);\r\n        year_quarter_labels.push(year + \" Q\" + quarter);\r\n      }\r\n    }\r\n\r\n    const timeSeriesData = [];\r\n\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      flightPath.push(shortestPath[i] + ' to ' + shortestPath[i + 1]);\r\n      let index = shortestPath[i] + ':' + shortestPath[i + 1] + ':' + this.props.year + ':' + this.props.quarter;\r\n      departures.push(this.props.flightPathStats[index]['departures']);\r\n      passengers.push(this.props.flightPathStats[index]['pass_sum']);\r\n      pathCost.push(this.props.flightPathStats[index]['market_fare'].toFixed(2));\r\n\r\n      const summaryPath = [];\r\n      for (let j = 0; j < year_quarter_indices.length; j++) {\r\n        index = shortestPath[i] + ':' + shortestPath[i + 1] + ':' + year_quarter_indices[j];\r\n        if (this.props.flightPathStats[index] !== undefined) {\r\n          summaryPath.push(this.props.flightPathStats[index]['market_fare'].toFixed(2));\r\n        }\r\n        else {\r\n          summaryPath.push(0);\r\n        }\r\n      }\r\n\r\n      timeSeriesData.push({\r\n        type: 'scatter',\r\n        mode: 'lines',\r\n        name: shortestPath[i] + ' to ' + shortestPath[i + 1],\r\n        x: year_quarter_labels,\r\n        y: summaryPath,\r\n        line: {\r\n          color: this.props.colors[i],\r\n        },\r\n        marker: {\r\n          hoverinfo: \"y\",\r\n        }\r\n      })\r\n    }\r\n\r\n    const avgPassengers = [];\r\n    for (let i = 0; i < passengers.length; i++) {\r\n      avgPassengers.push(Math.floor(passengers[i] / departures[i] + 0.5));\r\n    }\r\n\r\n    console.log(avgPassengers);\r\n\r\n    // console.log(flightPath);\r\n    // console.log(pathCost);\r\n\r\n    return (\r\n      <div>\r\n        {/* <Container> */}\r\n        <Row>\r\n          {/* Bar graph: Passengers(y) vs Airports(x) (Origin) */}\r\n          <Col xs=\"3\" className=\"form-row\">\r\n            <Card>\r\n              <Plot\r\n                data={[{\r\n                  x: flightPath,\r\n                  y: passengers,\r\n                  type: 'bar',\r\n                  marker: { size: 16, color: this.props.colors },\r\n                }]}\r\n                layout={{\r\n                  autosize: true,\r\n                  title: 'Number of Passengers per Flight Leg',\r\n                  xaxis: {\r\n                    title: 'Flight Leg'\r\n                  },\r\n                  yaxis: {\r\n                    title: 'Passengers'\r\n                  }\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            </Card>\r\n            <CardBody className=\"bg-light\">Let's see the total number of people that go along each flight leg</CardBody>\r\n          </Col>\r\n          {/* Bar graph: Passengers(y) vs Airports(x) (Destination) */}\r\n          <Col xs=\"3\" className=\"form-row\">\r\n            <Card>\r\n              <Plot\r\n                data={[{\r\n                  x: flightPath,\r\n                  y: departures,\r\n                  type: 'bar',\r\n                  marker: {\r\n                    size: 16,\r\n                    color: this.props.colors\r\n                  },\r\n                }]}\r\n                layout={{\r\n                  autosize: true,\r\n                  title: 'Number of Flights per Flight Leg',\r\n                  xaxis: {\r\n                    title: 'Flight Leg'\r\n                  },\r\n                  yaxis: {\r\n                    title: 'Flights'\r\n                  },\r\n\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n              <CardBody className=\"bg-light\">\r\n                Flight legs vary in activity. Major flights tend to have ~1000+, minor flight hubs tend to have 10 ~ 100\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col xs=\"3\" className=\"form-row\">\r\n            <Card>\r\n              <Plot\r\n                data={[{\r\n                  x: flightPath,\r\n                  y: avgPassengers,\r\n                  type: 'bar',\r\n                  marker: {\r\n                    size: 16,\r\n                    color: this.props.colors,\r\n                  },\r\n                }]}\r\n                layout={{\r\n                  autosize: true,\r\n                  title: 'Average Number of Passengers per Flight Leg per Flight',\r\n                  xaxis: {\r\n                    title: 'Flight Leg'\r\n                  },\r\n                  yaxis: {\r\n                    title: 'Average Number of Passengers'\r\n                  }\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n              <CardBody className=\"bg-light\">This is how many people you should expect to see on each flight leg.</CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* </Row> */}\r\n          {/* <Row> */}\r\n          <Col xs=\"3\" className=\"form-row\">\r\n            <Card>\r\n              <Plot\r\n                data={[{\r\n                  labels: flightPath,\r\n                  values: pathCost,\r\n                  type: 'pie',\r\n                  textinfo: 'value',\r\n                  marker: {\r\n                    colors: this.props.colors,\r\n                  },\r\n                }]}\r\n                layout={{\r\n                  title: 'Market Fare of Flight by Flight Leg',\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n              <CardBody className=\"bg-light\">Check the proportion of cost that each flight leg is taking for your full trip.</CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n              <Plot\r\n                data={timeSeriesData}\r\n                layout={{\r\n                  // autosize: true,\r\n                  title: 'Market Fare of Flight Leg by Year and Quarter',\r\n                  xaxis: {\r\n                    title: 'Year and Quarter'\r\n                  },\r\n                  yaxis: {\r\n                    title: 'Market Fare in U.S. Dollars'\r\n                  }\r\n                }}\r\n                useResizeHandler={true}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            </Card>\r\n            <CardBody className=\"bg-light\">\r\n              Let's see the change in the market fare of each flight leg.\r\n              We can expect steady growth going into 2018 and 2019 from the prices shown here.\r\n            </CardBody>\r\n          </Col>\r\n        </Row>\r\n        {/* </Container> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightStats;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Card, CardBody, CardImg, CardTitle, CardHeader } from 'reactstrap';\r\nimport FlightController from './FlightController';\r\nimport FlightCost from './FlightCost';\r\nimport FlightMap from './FlightMap';\r\nimport FlightStats from './FlightStats';\r\n\r\nimport { FibonacciHeap } from '@tyriar/fibonacci-heap';\r\n\r\n\r\nclass FlightDashboard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      origin: 'HNL',\r\n      dest: 'BGR',\r\n      year: this.props.flightData[0]['year'],\r\n      quarter: this.props.flightData[0]['quarter'],\r\n    }\r\n  }\r\n\r\n  callbackSetState = (state) => {\r\n    this.setState(state);\r\n  }\r\n\r\n  dijkstra = (V, E, W, source) => {\r\n    const dist = {};\r\n    const previous = {};\r\n    const Q = new FibonacciHeap();\r\n\r\n    for (let v of V) {\r\n      dist[v] = Infinity;\r\n      previous[v] = undefined;\r\n      Q.insert(v, dist[v]);\r\n    }\r\n    dist[source] = 0;\r\n\r\n    while (!Q.isEmpty()) {\r\n      const u = Q.extractMinimum().key;\r\n      if (E[u] === undefined) {\r\n        continue;\r\n      }\r\n      for (let v of E[u]) {\r\n        const alt = dist[u] + W[[u, v]];\r\n        if (alt < dist[v]) {\r\n          dist[v] = alt;\r\n          Q.insert(v, dist[v]);\r\n          previous[v] = u;\r\n        }\r\n      }\r\n    }\r\n    console.log(dist);\r\n    return { 'path': previous, 'dist': dist };\r\n  }\r\n\r\n  render() {\r\n    const flightData = [];\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['year'] === this.state.year &&\r\n        fd['quarter'] === this.state.quarter) {\r\n        flightData.push(fd);\r\n      }\r\n    }\r\n\r\n    const origin = new Set(flightData.map((fd) => fd['origin_abr']));\r\n    const dest = new Set(flightData.map((fd) => fd['dest_abr']));\r\n    const V = new Set([...origin, ...dest]);\r\n    const E = {};\r\n    const W = {};\r\n\r\n    for (let fd of flightData) {\r\n      if (E[fd['origin_abr']] === undefined) {\r\n        E[fd['origin_abr']] = [fd['dest_abr']];\r\n      }\r\n      else {\r\n        E[fd['origin_abr']].push(fd['dest_abr']);\r\n      }\r\n      W[[fd['origin_abr'], fd['dest_abr']]] = fd['market_fare'];\r\n    }\r\n    const dijkstraResult = this.dijkstra(V, E, W, this.state.origin);\r\n\r\n    const flightPathData = [];\r\n    for (let fd of this.props.flightData) {\r\n      if (fd['origin_abr'] === this.state.origin &&\r\n        fd['dest_abr'] === this.state.dest) {\r\n        flightPathData.push(fd);\r\n      }\r\n    }\r\n\r\n    // console.log(this.props.flightPathStats);\r\n\r\n    const colors = ['#4285F4', '#DB4437', '#F4B400', '#0F9D58', '#865FC2', '#F52EF4', '#F58680'];\r\n    const thickness = [1, 2, 3, 4, 5, 6, 7];\r\n\r\n    return (\r\n      <div>\r\n        {/* <Container style={{ marginTop: \"1em\" }}> */}\r\n        <Row style={{ marginTop: \"1em\" }}>\r\n          <Col xs=\"2\">\r\n            <Card>\r\n              <CardHeader tag=\"h2\" className=\"bg-white\">Plan your trip to paradise:</CardHeader>\r\n              <CardBody>\r\n                <Card>\r\n                  <CardHeader tag=\"h5\" className=\"bg-light\">\r\n                    Let's take a trip. Tell us where you're coming from and where you want to go.\r\n                    We'll show you the historical best prices for the year and quarter.\r\n                    Check the flight legs along the way to see your full path.\r\n                  </CardHeader>\r\n\r\n\r\n                </Card>\r\n\r\n              </CardBody>\r\n              <CardImg height=\"50%\" width=\"75%\" src=\"http://www.slate.com/content/dam/slate/articles/technology/future_tense/2016/05/160503_FT_cybersecurity-airplanes.jpg.CROP.promo-xlarge2.jpg\" />\r\n\r\n            </Card>\r\n          </Col>\r\n          <Col xs=\"1\">\r\n            <FlightController\r\n              originStateLabel={'Hawaii'}\r\n              destStateLabel={'Maine'}\r\n              originState={'HI'}\r\n              destState={'ME'}\r\n              originAirport={'HNL'}\r\n              destAirport={'BGR'}\r\n              year={this.state.year}\r\n              quarter={this.state.quarter}\r\n              callback={this.callbackSetState}\r\n              airportsData={Object.keys(this.props.airportsData).sort().map((val) => {\r\n                return { label: val, value: val }\r\n              })}\r\n              statesData={this.props.statesData}\r\n              statesToAirportsData={this.props.statesToAirportsData}\r\n              yearsData={this.props.yearsData}>\r\n            </FlightController>\r\n            <FlightCost\r\n              origin={this.state.origin}\r\n              dest={this.state.dest}\r\n              year={this.state.year}\r\n              quarter={this.state.quarter}\r\n              flightPathStats={this.props.flightPathStats}\r\n              shortestPath={dijkstraResult['path']}\r\n              shortestDist={dijkstraResult['dist']}\r\n              colors={colors}>\r\n            </FlightCost>\r\n          </Col>\r\n          <Col xs=\"4\">\r\n            <FlightMap\r\n              origin={this.state.origin}\r\n              dest={this.state.dest}\r\n              year={this.state.year}\r\n              quarter={this.state.quarter}\r\n              flightData={flightData}\r\n              airportsData={this.props.airportsData}\r\n              shortestPath={dijkstraResult['path']}\r\n              colors={colors}\r\n              thickness={thickness}\r\n              flightPathStats={this.props.flightPathStats}>\r\n            </FlightMap>\r\n          </Col>\r\n          <Col xs=\"5\">\r\n            <FlightStats\r\n              origin={this.state.origin}\r\n              dest={this.state.dest}\r\n              year={this.state.year}\r\n              quarter={this.state.quarter}\r\n              flightData={flightPathData}\r\n              flightPathStats={this.props.flightPathStats}\r\n              yearsData={this.props.yearsData}\r\n              shortestPath={dijkstraResult['path']}\r\n              shortestDist={dijkstraResult['dist']}\r\n              colors={colors}>\r\n            </FlightStats>\r\n          </Col>\r\n        </Row>\r\n        {/* <Row style={{ marginTop: \"1em\" }}>\r\n            \r\n          </Row> */}\r\n        {/* </Container> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightDashboard;\r\n\r\n\r\n","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand } from 'reactstrap';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"primary\" expand=\"md\" style={{justifyContent: 'center', fontWeight: 'bold'}}>\r\n            <NavbarBrand className=\"text-white\">\r\n              <h1>Trip to Paradise Visualization</h1>\r\n            </NavbarBrand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nclass FooterPage extends React.Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{ marginTop: '1em'}}>\n                <Container fluid className=\"text-white bg-info\">\n                    <br></br>\n                    <br></br>\n                    <h3>Jobs fills your pocket. Adventures in paradise fills your soul.</h3>\n                    <br></br>\n                    <br></br>\n                </Container>\n                <Container fluid className=\"text-black bg-white\">\n                    <br></br>\n                    &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                    <a href=\"https://github.com/data-science-defiance/airlines-visualization\" className=\"text-black\" style={{ textDecoration: \"underline\"}}>\n                        Airline Visualization \n                    </a>\n                    <br></br>\n                    <br></br>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default FooterPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'leaflet/dist/leaflet.css'\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FlightDashboard from './components/Dashboard/FlightDashboard';\nimport Header from './components/Header/Header';\nimport FooterPage from './components/Footer/Footer';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport USAFlights from './assets/USAFlights';\n\nimport Airports from './assets/Airports';\nimport FlightPathStats from './assets/FlightPathStats';\nimport States from './assets/States';\nimport StatesToAirports from './assets/StatesToAirports';\nimport Years from './assets/Years';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Controller />, document.getElementById('flight-select'));\nReactDOM.render(\n    <Header />,\n    document.getElementById('header')\n);\nReactDOM.render(\n    <FlightDashboard\n        flightData={USAFlights}\n        airportsData={Airports}\n        flightPathStats={FlightPathStats}\n        statesData={States}\n        statesToAirportsData={StatesToAirports}\n        yearsData={Years.sort().reverse()} />,\n    document.getElementById('flight-dashboard')\n);\nReactDOM.render(\n    <FooterPage/>,\n    document.getElementById('footer')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/takeoff.3f4020c9.svg\";"],"sourceRoot":""}